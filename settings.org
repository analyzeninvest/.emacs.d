
* packages

** melpa

#+BEGIN_SRC emacs-lisp
(add-to-list 'package-archives '("melpa" . "http://melpa.org/packages/" ) t)
(package-initialize)
#+END_SRC

* varibales for modes

** display & input

*** description

Basic display & inputs. Below varibles set:
- disable menu bar, tool bar, scrool bar, init splash screen
- display linumber mode, column mode, time & battery life
- disable backup files

*** codes

  #+BEGIN_SRC emacs-lisp
  (menu-bar-mode -1)
  (tool-bar-mode -1)
  (scroll-bar-mode -1)
  (toggle-frame-maximized)
  (setq inhibit-splash-screen t)
  (setq make-backup-files nil)
  (global-linum-mode 1)
  (defalias 'yes-or-no-p 'y-or-n-p)
  (display-time-mode 1)
  (display-battery-mode 1)
  (setq column-number-mode t)
  (global-hl-line-mode 1)
  #+END_SRC

** ido

*** description
Interactive-DO.
Interactive DO mode is an inbuilt mode for 'find-files' interactively.

Below varibles sets:
- enable ido mode
- set ido for all buffers
- flexible match, for matching names at any location
- create new buffer always
- sorting the file names according the list

Thanks to: [[https://www.masteringemacs.org/article/introduction-to-ido-mode][Mickey Peterson's IDO blog]]

*** codes

#+BEGIN_SRC emacs-lisp
(ido-mode 1)
(setq ido-everywhere t)
(setq ido-enable-flex-matching t)
(setq ido-use-filename-at-point 'guess)
(setq ido-create-new-buffer 'always)
(setq ido-file-extension-order '(".org" ".txt" ".csv"))

#+END_SRC

* installed packages

** ido describe binding

** ido grid mode
#+BEGIN_SRC emacs-lisp
(ido-grid-mode 1)
#+END_SRC

** cycle themes
#+BEGIN_SRC emacs-lis
(setq cycle-themes-theme-list
'(exotica-theme dracula-theme))
(require 'cycle-themes)
(cycle-themes-mode)
#+END_SRC

** org bullets
#+BEGIN_SRC emacs-lisp
(require 'org-bullets)
(add-hook 'org-mode-hook (lambda() (org-bullets-mode 1)))
#+END_SRC
* themes
#+BEGIN_SRC emacs-lisp
(load-theme 'exotica t)
#+END_SRC

** dracula

** exotica

* good features to remember

** movement keys

   These are some basic movement keys in emacs.

 |-----------+---------------------------------|
 | key combo | effect                          |
 |-----------+---------------------------------|
 | C-f       | forward char                    |
 | C-b       | backward char                   |
 | C-n       | next line                       |
 | C-p       | previous line                   |
 | C-a       | beginging of line               |
 | C-e       | end of line                     |
 | C-x [     | forward one page                |
 | C-x ]     | backward one page               |
 |-----------+---------------------------------|
 | M-f       | forward word                    |
 | M-b       | backward word                   |
 | M-m       | first non whitespace            |
 | M-}       | move beginging of a paragraph   |
 | M-{       | move beginging of a paragraph   |
 | M-a       | move beginging of a sentence    |
 | M-e       | move beginging of a sentence    |
 | M-<       | move to begining of buffer      |
 | M->       | move to end of buffer           |
 |-----------+---------------------------------|
 | C-M-f     | forward s-expression            |
 | C-M-b     | backward s-expression           |
 | C-M-d     | move down to a list             |
 | C-M-u     | move up out of list             |
 | C-M-n     | move to next list               |
 | C-M-p     | move to previous list           |
 | C-M-a     | move to begining of defun       |
 | C-M-e     | move to end of defun            |
 |-----------+---------------------------------|
 | C-v       | scroll down one page            |
 | M-v       | scroll up one page              |
 | C-M-v     | scroll down other window        |
 | C-M-S-v   | scroll up other window          |
 |-----------+---------------------------------|
 | C-x r m   | set a bookmark                  |
 | C-x r l   | list a bookmark                 |
 | C-x r b   | jump to a bookmark              |
 |-----------+---------------------------------|
 | C-x r n   | store number in resistor        |
 | C-x r s   | store region in resistor        |
 | C-x r SPC | store point in resistor         |
 | C-x r +   | increment content in resistor   |
 | C-x r j   | jump to resistor                |
 | C-x r i   | insert content of resistor      |
 | C-x r w   | store window config in resistor |
 | C-x r f   | store frameset in resistor      |
 |-----------+---------------------------------|
 | C-SPC     | mark the region                 |
 | C-u C-SPC | Jump to mark                    |
 | C-x C-x   | exchanges mark & point          |
 |-----------+---------------------------------|
 | M-h       | Mark Next paragraph             |
 | C-x h     | Mark whole buffer               |
 | C-M-h     | mark next defun                 |
 | C-x C-p   | mark next page                  |
 | M-@       | mark next word                  |
 | C-M-@     | mark next s expression          |
 |-----------+---------------------------------|

 
